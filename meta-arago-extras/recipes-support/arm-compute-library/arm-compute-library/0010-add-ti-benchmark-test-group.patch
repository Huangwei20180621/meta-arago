From 76a4ca1417987c6542dd76b625d001ae8f30657e Mon Sep 17 00:00:00 2001
From: Qin Su <qsu@ti.com>
Date: Tue, 27 Nov 2018 17:19:58 -0500
Subject: [PATCH 10/11] add TI benchmark test group

Upstream-Status: Inappropriate [TI only test code]

Signed-off-by: Qin Su <qsu@ti.com>
---
 tests/benchmark/NEON/PoolingLayer.cpp | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/tests/benchmark/NEON/PoolingLayer.cpp b/tests/benchmark/NEON/PoolingLayer.cpp
index 8b7ee84..de93006 100644
--- a/tests/benchmark/NEON/PoolingLayer.cpp
+++ b/tests/benchmark/NEON/PoolingLayer.cpp
@@ -48,10 +48,13 @@ namespace benchmark
 namespace
 {
 const auto data_layouts = framework::dataset::make("DataLayout", { DataLayout::NCHW, DataLayout::NHWC });
+const auto data_layouts_tibenchmark = framework::dataset::make("DataLayout", { DataLayout::NCHW});
 #ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC
 const auto data_types = framework::dataset::make("DataType", { DataType::F16, DataType::F32, DataType::QASYMM8 });
+const auto data_types_tibenchmark = framework::dataset::make("DataType", { DataType::F32 });
 #else  /* __ARM_FEATURE_FP16_VECTOR_ARITHMETIC */
 const auto data_types = framework::dataset::make("DataType", { DataType::F32, DataType::QASYMM8 });
+const auto data_types_tibenchmark = framework::dataset::make("DataType", { DataType::F32 });
 #endif /* __ARM_FEATURE_FP16_VECTOR_ARITHMETIC */
 } // namespace
 
@@ -107,6 +110,16 @@ REGISTER_FIXTURE_DATA_TEST_CASE(YOLOV2PoolingLayer, NEPoolingLayerFixture, frame
                                 framework::dataset::combine(framework::dataset::combine(framework::dataset::combine(datasets::YOLOV2PoolingLayerDataset(), data_types), data_layouts), framework::dataset::make("Batches", { 4, 8 })));
 TEST_SUITE_END()
 TEST_SUITE_END()
+
+TEST_SUITE(TIBENCHMARK_SQUEEZENET)
+REGISTER_FIXTURE_DATA_TEST_CASE(TISqueezeNetPoolingLayer, NEPoolingLayerFixture, framework::DatasetMode::ALL,
+                                framework::dataset::combine(framework::dataset::combine(framework::dataset::combine(datasets::TISqueezeNetPoolingLayerDataset(), data_types_tibenchmark), data_layouts_tibenchmark), framework::dataset::make("Batches", 1)));
+TEST_SUITE_END()
+TEST_SUITE(TIBENCHMARK_INCEPTIONNET)
+REGISTER_FIXTURE_DATA_TEST_CASE(GoogLeNetInceptionV1PoolingLayer, NEPoolingLayerFixture, framework::DatasetMode::ALL,
+                                framework::dataset::combine(framework::dataset::combine(framework::dataset::combine(datasets::GoogLeNetInceptionV1PoolingLayerDataset(), data_types_tibenchmark), data_layouts_tibenchmark), framework::dataset::make("Batches",
+                                                            1)));
+TEST_SUITE_END()
 } // namespace benchmark
 } // namespace test
 } // namespace arm_compute
-- 
1.9.1

